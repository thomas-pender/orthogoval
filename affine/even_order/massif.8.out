desc: (none)
cmd: ./bin/transversal 6 8 ./var/ord8/generators.8.txt ./var/ord8/spread.8.txt
time_unit: i
#-----------
snapshot=0
#-----------
time=0
mem_heap_B=0
mem_heap_extra_B=0
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=1
#-----------
time=2796565923
mem_heap_B=34331560
mem_heap_extra_B=6458616
mem_stacks_B=0
heap_tree=detailed
n8: 34331560 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 12964896 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 12964896 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 12964896 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 12964896 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 12964896 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 12964896 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 12964896 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 12964608 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 12964608 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 9723672 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 9723672 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 9723672 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 9723672 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 9723672 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 9723672 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 9723672 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 9723456 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 9723456 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 4808736 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 4808736 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 4808736 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 4808736 0x10AD73: main (transversal.c++:57)
 n1: 3606552 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 3606552 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 3606552 0x10AD73: main (transversal.c++:57)
 n1: 1800680 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 1800680 0x10F51C: allocate (allocator.h:185)
   n1: 1800680 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 1800680 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 1800680 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 1800680 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 1800680 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 1800640 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 1800640 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 681832 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 681832 0x10F145: allocate (allocator.h:185)
   n1: 681832 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 681832 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 681832 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 681832 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 681832 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 681832 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 681832 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 681832 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 681832 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 681832 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 667840 0x10F8AF: __gnu_cxx::new_allocator<std::_List_node<AG> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 667840 0x10EF5C: allocate (allocator.h:185)
   n1: 667840 0x10EF5C: std::allocator_traits<std::allocator<std::_List_node<AG> > >::allocate(std::allocator<std::_List_node<AG> >&, unsigned long) (alloc_traits.h:464)
    n2: 667840 0x10E40C: std::__cxx11::_List_base<AG, std::allocator<AG> >::_M_get_node() (stl_list.h:443)
     n1: 667840 0x10D8A1: std::_List_node<AG>* std::__cxx11::list<AG, std::allocator<AG> >::_M_create_node<AG>(AG&&) (stl_list.h:635)
      n1: 667840 0x10CE9F: void std::__cxx11::list<AG, std::allocator<AG> >::_M_insert<AG>(std::_List_iterator<AG>, AG&&) (stl_list.h:1912)
       n1: 667840 0x10C40C: std::__cxx11::list<AG, std::allocator<AG> >::push_back(AG&&) (stl_list.h:1218)
        n0: 667840 0x10AE64: main (transversal.c++:64)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 77352 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=2
#-----------
time=6286931494
mem_heap_B=74691336
mem_heap_extra_B=14101296
mem_stacks_B=0
heap_tree=detailed
n8: 74691336 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 28850112 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 28850112 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 28850112 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 28850112 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 28850112 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 28850112 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 28850112 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 28849824 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 28849824 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 21637584 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 21637584 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 21637584 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 21637584 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 21637584 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 21637584 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 21637584 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 21637368 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 21637368 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 9919008 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 9919008 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 9919008 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 9919008 0x10AD73: main (transversal.c++:57)
 n1: 7439256 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 7439256 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 7439256 0x10AD73: main (transversal.c++:57)
 n1: 4006960 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 4006960 0x10F51C: allocate (allocator.h:185)
   n1: 4006960 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 4006960 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 4006960 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 4006960 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 4006960 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 4006920 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 4006920 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 1383464 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 1383464 0x10F145: allocate (allocator.h:185)
   n1: 1383464 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 1383464 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 1383464 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 1383464 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 1383464 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 1383464 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 1383464 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 1383464 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 1383464 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 1383464 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 1377600 0x10F8AF: __gnu_cxx::new_allocator<std::_List_node<AG> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 1377600 0x10EF5C: allocate (allocator.h:185)
   n1: 1377600 0x10EF5C: std::allocator_traits<std::allocator<std::_List_node<AG> > >::allocate(std::allocator<std::_List_node<AG> >&, unsigned long) (alloc_traits.h:464)
    n2: 1377600 0x10E40C: std::__cxx11::_List_base<AG, std::allocator<AG> >::_M_get_node() (stl_list.h:443)
     n1: 1377600 0x10D8A1: std::_List_node<AG>* std::__cxx11::list<AG, std::allocator<AG> >::_M_create_node<AG>(AG&&) (stl_list.h:635)
      n1: 1377600 0x10CE9F: void std::__cxx11::list<AG, std::allocator<AG> >::_M_insert<AG>(std::_List_iterator<AG>, AG&&) (stl_list.h:1912)
       n1: 1377600 0x10C40C: std::__cxx11::list<AG, std::allocator<AG> >::push_back(AG&&) (stl_list.h:1218)
        n0: 1377600 0x10AE64: main (transversal.c++:64)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 77352 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=3
#-----------
time=8452769909
mem_heap_B=100661352
mem_heap_extra_B=19089192
mem_stacks_B=0
heap_tree=detailed
n8: 100661352 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 38691360 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 38691360 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 38691360 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 38691360 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 38691360 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 38691360 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 38691360 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 38691072 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 38691072 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 29018520 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 29018520 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 29018520 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 29018520 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 29018520 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 29018520 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 29018520 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 29018304 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 29018304 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 13826592 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 13826592 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 13826592 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 13826592 0x10AD73: main (transversal.c++:57)
 n1: 10369944 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 10369944 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 10369944 0x10AD73: main (transversal.c++:57)
 n1: 5373800 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 5373800 0x10F51C: allocate (allocator.h:185)
   n1: 5373800 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 5373800 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 5373800 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 5373800 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 5373800 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 5373760 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 5373760 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 1920320 0x10F8AF: __gnu_cxx::new_allocator<std::_List_node<AG> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 1920320 0x10EF5C: allocate (allocator.h:185)
   n1: 1920320 0x10EF5C: std::allocator_traits<std::allocator<std::_List_node<AG> > >::allocate(std::allocator<std::_List_node<AG> >&, unsigned long) (alloc_traits.h:464)
    n2: 1920320 0x10E40C: std::__cxx11::_List_base<AG, std::allocator<AG> >::_M_get_node() (stl_list.h:443)
     n1: 1920320 0x10D8A1: std::_List_node<AG>* std::__cxx11::list<AG, std::allocator<AG> >::_M_create_node<AG>(AG&&) (stl_list.h:635)
      n1: 1920320 0x10CE9F: void std::__cxx11::list<AG, std::allocator<AG> >::_M_insert<AG>(std::_List_iterator<AG>, AG&&) (stl_list.h:1912)
       n1: 1920320 0x10C40C: std::__cxx11::list<AG, std::allocator<AG> >::push_back(AG&&) (stl_list.h:1218)
        n0: 1920320 0x10AE64: main (transversal.c++:64)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 1383464 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 1383464 0x10F145: allocate (allocator.h:185)
   n1: 1383464 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 1383464 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 1383464 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 1383464 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 1383464 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 1383464 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 1383464 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 1383464 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 1383464 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 1383464 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 77352 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=4
#-----------
time=11313695385
mem_heap_B=136061896
mem_heap_extra_B=25588560
mem_stacks_B=0
heap_tree=detailed
n8: 136061896 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 51516288 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 51516288 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 51516288 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 51516288 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 51516288 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 51516288 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 51516288 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 51516000 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 51516000 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 38637216 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 38637216 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 38637216 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 38637216 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 38637216 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 38637216 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 38637216 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 38637000 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 38637000 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 18988704 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 18988704 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 18988704 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 18988704 0x10AD73: main (transversal.c++:57)
 n1: 14241528 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 14241528 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 14241528 0x10AD73: main (transversal.c++:57)
 n1: 7155040 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 7155040 0x10F51C: allocate (allocator.h:185)
   n1: 7155040 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 7155040 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 7155040 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 7155040 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 7155040 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 7155000 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 7155000 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 2808488 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 2808488 0x10F145: allocate (allocator.h:185)
   n1: 2808488 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 2808488 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 2808488 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 2808488 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 2808488 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 2808488 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 2808488 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 2808488 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 2808488 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 2808488 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 2637280 0x10F8AF: __gnu_cxx::new_allocator<std::_List_node<AG> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 2637280 0x10EF5C: allocate (allocator.h:185)
   n1: 2637280 0x10EF5C: std::allocator_traits<std::allocator<std::_List_node<AG> > >::allocate(std::allocator<std::_List_node<AG> >&, unsigned long) (alloc_traits.h:464)
    n2: 2637280 0x10E40C: std::__cxx11::_List_base<AG, std::allocator<AG> >::_M_get_node() (stl_list.h:443)
     n1: 2637280 0x10D8A1: std::_List_node<AG>* std::__cxx11::list<AG, std::allocator<AG> >::_M_create_node<AG>(AG&&) (stl_list.h:635)
      n1: 2637280 0x10CE9F: void std::__cxx11::list<AG, std::allocator<AG> >::_M_insert<AG>(std::_List_iterator<AG>, AG&&) (stl_list.h:1912)
       n1: 2637280 0x10C40C: std::__cxx11::list<AG, std::allocator<AG> >::push_back(AG&&) (stl_list.h:1218)
        n0: 2637280 0x10AE64: main (transversal.c++:64)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 77352 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=5
#-----------
time=13276236854
mem_heap_B=150183592
mem_heap_extra_B=28397368
mem_stacks_B=0
heap_tree=detailed
n8: 150183592 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 60170976 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 60170976 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 60170976 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 60170976 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 60170976 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 60170976 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 60170976 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 60170688 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 60170688 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 45128232 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 45128232 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 45128232 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 45128232 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 45128232 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 45128232 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 45128232 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 45128016 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 45128016 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 17810208 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 17810208 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 17810208 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 17810208 0x10AD73: main (transversal.c++:57)
 n1: 13357656 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 13357656 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 13357656 0x10AD73: main (transversal.c++:57)
 n1: 8357080 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 8357080 0x10F51C: allocate (allocator.h:185)
   n1: 8357080 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 8357080 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 8357080 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 8357080 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 8357080 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 8357040 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 8357040 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 2808488 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 2808488 0x10F145: allocate (allocator.h:185)
   n1: 2808488 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 2808488 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 2808488 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 2808488 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 2808488 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 2808488 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 2808488 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 2808488 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 2808488 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 2808488 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 2473600 0x10F8AF: __gnu_cxx::new_allocator<std::_List_node<AG> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 2473600 0x10EF5C: allocate (allocator.h:185)
   n1: 2473600 0x10EF5C: std::allocator_traits<std::allocator<std::_List_node<AG> > >::allocate(std::allocator<std::_List_node<AG> >&, unsigned long) (alloc_traits.h:464)
    n2: 2473600 0x10E40C: std::__cxx11::_List_base<AG, std::allocator<AG> >::_M_get_node() (stl_list.h:443)
     n1: 2473600 0x10D8A1: std::_List_node<AG>* std::__cxx11::list<AG, std::allocator<AG> >::_M_create_node<AG>(AG&&) (stl_list.h:635)
      n1: 2473600 0x10CE9F: void std::__cxx11::list<AG, std::allocator<AG> >::_M_insert<AG>(std::_List_iterator<AG>, AG&&) (stl_list.h:1912)
       n1: 2473600 0x10C40C: std::__cxx11::list<AG, std::allocator<AG> >::push_back(AG&&) (stl_list.h:1218)
        n0: 2473600 0x10AE64: main (transversal.c++:64)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 77352 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=6
#-----------
time=15853088257
mem_heap_B=168899880
mem_heap_extra_B=32102920
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=7
#-----------
time=18040209874
mem_heap_B=206331464
mem_heap_extra_B=39262064
mem_stacks_B=0
heap_tree=detailed
n8: 206331464 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 81286272 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 81286272 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 81286272 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 81286272 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 81286272 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 81286272 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 81286272 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 81285984 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 81285984 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 60964704 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 60964704 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 60964704 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 60964704 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 60964704 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 60964704 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 60964704 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 60964488 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 60964488 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 26420256 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 26420256 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 26420256 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 26420256 0x10AD73: main (transversal.c++:57)
 n1: 19815192 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 19815192 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 19815192 0x10AD73: main (transversal.c++:57)
 n1: 11289760 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 11289760 0x10F51C: allocate (allocator.h:185)
   n1: 11289760 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 11289760 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 11289760 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 11289760 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 11289760 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 11289720 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 11289720 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 3669440 0x10F8AF: __gnu_cxx::new_allocator<std::_List_node<AG> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 3669440 0x10EF5C: allocate (allocator.h:185)
   n1: 3669440 0x10EF5C: std::allocator_traits<std::allocator<std::_List_node<AG> > >::allocate(std::allocator<std::_List_node<AG> >&, unsigned long) (alloc_traits.h:464)
    n2: 3669440 0x10E40C: std::__cxx11::_List_base<AG, std::allocator<AG> >::_M_get_node() (stl_list.h:443)
     n1: 3669440 0x10D8A1: std::_List_node<AG>* std::__cxx11::list<AG, std::allocator<AG> >::_M_create_node<AG>(AG&&) (stl_list.h:635)
      n1: 3669440 0x10CE9F: void std::__cxx11::list<AG, std::allocator<AG> >::_M_insert<AG>(std::_List_iterator<AG>, AG&&) (stl_list.h:1912)
       n1: 3669440 0x10C40C: std::__cxx11::list<AG, std::allocator<AG> >::push_back(AG&&) (stl_list.h:1218)
        n0: 3669440 0x10AE64: main (transversal.c++:64)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 2808488 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 2808488 0x10F145: allocate (allocator.h:185)
   n1: 2808488 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 2808488 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 2808488 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 2808488 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 2808488 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 2808488 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 2808488 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 2808488 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 2808488 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 2808488 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 77352 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=8
#-----------
time=21515137951
mem_heap_B=233331080
mem_heap_extra_B=44494336
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=9
#-----------
time=24036900861
mem_heap_B=277965480
mem_heap_extra_B=52478384
mem_stacks_B=0
heap_tree=detailed
n8: 277965480 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 107353152 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 107353152 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 107353152 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 107353152 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 107353152 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 107353152 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 107353152 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 107352864 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 107352864 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 80514864 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 80514864 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 80514864 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 80514864 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 80514864 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 80514864 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 80514864 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 80514648 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 80514648 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 36745632 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 36745632 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 36745632 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 36745632 0x10AD73: main (transversal.c++:57)
 n1: 27559224 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 27559224 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 27559224 0x10AD73: main (transversal.c++:57)
 n1: 14910160 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 14910160 0x10F51C: allocate (allocator.h:185)
   n1: 14910160 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 14910160 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 14910160 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 14910160 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 14910160 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 14910120 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 14910120 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 5701576 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 5701576 0x10F145: allocate (allocator.h:185)
   n1: 5701576 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 5701576 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 5701576 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 5701576 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 5701576 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 5701576 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 5701576 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 5701576 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 5701576 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 5701576 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 5103520 0x10F8AF: __gnu_cxx::new_allocator<std::_List_node<AG> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 5103520 0x10EF5C: allocate (allocator.h:185)
   n1: 5103520 0x10EF5C: std::allocator_traits<std::allocator<std::_List_node<AG> > >::allocate(std::allocator<std::_List_node<AG> >&, unsigned long) (alloc_traits.h:464)
    n2: 5103520 0x10E40C: std::__cxx11::_List_base<AG, std::allocator<AG> >::_M_get_node() (stl_list.h:443)
     n1: 5103520 0x10D8A1: std::_List_node<AG>* std::__cxx11::list<AG, std::allocator<AG> >::_M_create_node<AG>(AG&&) (stl_list.h:635)
      n1: 5103520 0x10CE9F: void std::__cxx11::list<AG, std::allocator<AG> >::_M_insert<AG>(std::_List_iterator<AG>, AG&&) (stl_list.h:1912)
       n1: 5103520 0x10C40C: std::__cxx11::list<AG, std::allocator<AG> >::push_back(AG&&) (stl_list.h:1218)
        n0: 5103520 0x10AE64: main (transversal.c++:64)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 77352 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=10
#-----------
time=27485810807
mem_heap_B=296290704
mem_heap_extra_B=55983120
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=11
#-----------
time=30477508460
mem_heap_B=345893672
mem_heap_extra_B=65466032
mem_stacks_B=0
heap_tree=detailed
n8: 345893672 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 135099936 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 135099936 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 135099936 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 135099936 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 135099936 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 135099936 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 135099936 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 135099648 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 135099648 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 101324952 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 101324952 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 101324952 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 101324952 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 101324952 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 101324952 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 101324952 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 101324736 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 101324736 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 44960832 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 44960832 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 44960832 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 44960832 0x10AD73: main (transversal.c++:57)
 n1: 33720624 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 33720624 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 33720624 0x10AD73: main (transversal.c++:57)
 n1: 18763880 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 18763880 0x10F51C: allocate (allocator.h:185)
   n1: 18763880 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 18763880 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 18763880 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 18763880 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 18763880 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 18763840 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 18763840 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 6244520 0x10F8AF: __gnu_cxx::new_allocator<std::_List_node<AG> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 6244520 0x10EF5C: allocate (allocator.h:185)
   n1: 6244520 0x10EF5C: std::allocator_traits<std::allocator<std::_List_node<AG> > >::allocate(std::allocator<std::_List_node<AG> >&, unsigned long) (alloc_traits.h:464)
    n2: 6244520 0x10E40C: std::__cxx11::_List_base<AG, std::allocator<AG> >::_M_get_node() (stl_list.h:443)
     n1: 6244520 0x10D8A1: std::_List_node<AG>* std::__cxx11::list<AG, std::allocator<AG> >::_M_create_node<AG>(AG&&) (stl_list.h:635)
      n1: 6244520 0x10CE9F: void std::__cxx11::list<AG, std::allocator<AG> >::_M_insert<AG>(std::_List_iterator<AG>, AG&&) (stl_list.h:1912)
       n1: 6244520 0x10C40C: std::__cxx11::list<AG, std::allocator<AG> >::push_back(AG&&) (stl_list.h:1218)
        n0: 6244520 0x10AE64: main (transversal.c++:64)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 5701576 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 5701576 0x10F145: allocate (allocator.h:185)
   n1: 5701576 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 5701576 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 5701576 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 5701576 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 5701576 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 5701576 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 5701576 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 5701576 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 5701576 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 5701576 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 77352 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=12
#-----------
time=33264825267
mem_heap_B=343354792
mem_heap_extra_B=65014688
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=13
#-----------
time=37051605207
mem_heap_B=405492680
mem_heap_extra_B=76893992
mem_stacks_B=0
heap_tree=detailed
n8: 405492680 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 162841536 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 162841536 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 162841536 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 162841536 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 162841536 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 162841536 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 162841536 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 162841248 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 162841248 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 122131152 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 122131152 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 122131152 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 122131152 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 122131152 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 122131152 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 122131152 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 122130936 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 122130936 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 48771648 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 48771648 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 48771648 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 48771648 0x10AD73: main (transversal.c++:57)
 n1: 36578736 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 36578736 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 36578736 0x10AD73: main (transversal.c++:57)
 n1: 22616880 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 22616880 0x10F51C: allocate (allocator.h:185)
   n1: 22616880 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 22616880 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 22616880 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 22616880 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 22616880 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 22616840 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 22616840 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 6773800 0x10F8AF: __gnu_cxx::new_allocator<std::_List_node<AG> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 6773800 0x10EF5C: allocate (allocator.h:185)
   n1: 6773800 0x10EF5C: std::allocator_traits<std::allocator<std::_List_node<AG> > >::allocate(std::allocator<std::_List_node<AG> >&, unsigned long) (alloc_traits.h:464)
    n2: 6773800 0x10E40C: std::__cxx11::_List_base<AG, std::allocator<AG> >::_M_get_node() (stl_list.h:443)
     n1: 6773800 0x10D8A1: std::_List_node<AG>* std::__cxx11::list<AG, std::allocator<AG> >::_M_create_node<AG>(AG&&) (stl_list.h:635)
      n1: 6773800 0x10CE9F: void std::__cxx11::list<AG, std::allocator<AG> >::_M_insert<AG>(std::_List_iterator<AG>, AG&&) (stl_list.h:1912)
       n1: 6773800 0x10C40C: std::__cxx11::list<AG, std::allocator<AG> >::push_back(AG&&) (stl_list.h:1218)
        n0: 6773800 0x10AE64: main (transversal.c++:64)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 5701576 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 5701576 0x10F145: allocate (allocator.h:185)
   n1: 5701576 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 5701576 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 5701576 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 5701576 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 5701576 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 5701576 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 5701576 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 5701576 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 5701576 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 5701576 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 77352 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=14
#-----------
time=39386640867
mem_heap_B=443449736
mem_heap_extra_B=84150488
mem_stacks_B=0
heap_tree=detailed
n8: 443449736 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 172888992 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 172888992 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 172888992 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 172888992 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 172888992 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 172888992 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 172888992 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 172888704 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 172888704 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 129666744 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 129666744 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 129666744 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 129666744 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 129666744 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 129666744 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 129666744 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 129666528 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 129666528 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 58819104 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 58819104 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 58819104 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 58819104 0x10AD73: main (transversal.c++:57)
 n1: 44114328 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 44114328 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 44114328 0x10AD73: main (transversal.c++:57)
 n1: 24012360 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 24012360 0x10F51C: allocate (allocator.h:185)
   n1: 24012360 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 24012360 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 24012360 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 24012360 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 24012360 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 24012320 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 24012320 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 8169280 0x10F8AF: __gnu_cxx::new_allocator<std::_List_node<AG> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 8169280 0x10EF5C: allocate (allocator.h:185)
   n1: 8169280 0x10EF5C: std::allocator_traits<std::allocator<std::_List_node<AG> > >::allocate(std::allocator<std::_List_node<AG> >&, unsigned long) (alloc_traits.h:464)
    n2: 8169280 0x10E40C: std::__cxx11::_List_base<AG, std::allocator<AG> >::_M_get_node() (stl_list.h:443)
     n1: 8169280 0x10D8A1: std::_List_node<AG>* std::__cxx11::list<AG, std::allocator<AG> >::_M_create_node<AG>(AG&&) (stl_list.h:635)
      n1: 8169280 0x10CE9F: void std::__cxx11::list<AG, std::allocator<AG> >::_M_insert<AG>(std::_List_iterator<AG>, AG&&) (stl_list.h:1912)
       n1: 8169280 0x10C40C: std::__cxx11::list<AG, std::allocator<AG> >::push_back(AG&&) (stl_list.h:1218)
        n0: 8169280 0x10AE64: main (transversal.c++:64)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 5701576 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 5701576 0x10F145: allocate (allocator.h:185)
   n1: 5701576 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 5701576 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 5701576 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 5701576 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 5701576 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 5701576 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 5701576 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 5701576 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 5701576 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 5701576 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 77352 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=15
#-----------
time=42378783075
mem_heap_B=433576176
mem_heap_extra_B=82577240
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=16
#-----------
time=44075838360
mem_heap_B=461173256
mem_heap_extra_B=87853144
mem_stacks_B=0
heap_tree=detailed
n8: 461173256 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 192003552 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 192003552 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 192003552 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 192003552 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 192003552 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 192003552 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 192003552 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 192003264 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 192003264 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 144002664 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 144002664 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 144002664 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 144002664 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 144002664 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 144002664 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 144002664 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 144002448 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 144002448 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 49087584 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 49087584 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 49087584 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 49087584 0x10AD73: main (transversal.c++:57)
 n1: 36815688 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 36815688 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 36815688 0x10AD73: main (transversal.c++:57)
 n1: 26667160 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 26667160 0x10F51C: allocate (allocator.h:185)
   n1: 26667160 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 26667160 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 26667160 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 26667160 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 26667160 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 26667120 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 26667120 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 6817680 0x10F8AF: __gnu_cxx::new_allocator<std::_List_node<AG> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 6817680 0x10EF5C: allocate (allocator.h:185)
   n1: 6817680 0x10EF5C: std::allocator_traits<std::allocator<std::_List_node<AG> > >::allocate(std::allocator<std::_List_node<AG> >&, unsigned long) (alloc_traits.h:464)
    n2: 6817680 0x10E40C: std::__cxx11::_List_base<AG, std::allocator<AG> >::_M_get_node() (stl_list.h:443)
     n1: 6817680 0x10D8A1: std::_List_node<AG>* std::__cxx11::list<AG, std::allocator<AG> >::_M_create_node<AG>(AG&&) (stl_list.h:635)
      n1: 6817680 0x10CE9F: void std::__cxx11::list<AG, std::allocator<AG> >::_M_insert<AG>(std::_List_iterator<AG>, AG&&) (stl_list.h:1912)
       n1: 6817680 0x10C40C: std::__cxx11::list<AG, std::allocator<AG> >::push_back(AG&&) (stl_list.h:1218)
        n0: 6817680 0x10AE64: main (transversal.c++:64)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 5701576 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 5701576 0x10F145: allocate (allocator.h:185)
   n1: 5701576 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 5701576 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 5701576 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 5701576 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 5701576 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 5701576 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 5701576 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 5701576 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 5701576 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 5701576 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 77352 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=17
#-----------
time=46479959753
mem_heap_B=499377288
mem_heap_extra_B=95156856
mem_stacks_B=0
heap_tree=detailed
n7: 499377288 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 202116384 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 202116384 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 202116384 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 202116384 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 202116384 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 202116384 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 202116384 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 202116096 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 202116096 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 151587288 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 151587288 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 151587288 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 151587288 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 151587288 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 151587288 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 151587288 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 151587072 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 151587072 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 59200416 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 59200416 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 59200416 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 59200416 0x10AD73: main (transversal.c++:57)
 n1: 44400312 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 44400312 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 44400312 0x10AD73: main (transversal.c++:57)
 n1: 28071720 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 28071720 0x10F51C: allocate (allocator.h:185)
   n1: 28071720 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 28071720 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 28071720 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 28071720 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 28071720 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 28071680 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 28071680 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 8222240 0x10F8AF: __gnu_cxx::new_allocator<std::_List_node<AG> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 8222240 0x10EF5C: allocate (allocator.h:185)
   n1: 8222240 0x10EF5C: std::allocator_traits<std::allocator<std::_List_node<AG> > >::allocate(std::allocator<std::_List_node<AG> >&, unsigned long) (alloc_traits.h:464)
    n2: 8222240 0x10E40C: std::__cxx11::_List_base<AG, std::allocator<AG> >::_M_get_node() (stl_list.h:443)
     n1: 8222240 0x10D8A1: std::_List_node<AG>* std::__cxx11::list<AG, std::allocator<AG> >::_M_create_node<AG>(AG&&) (stl_list.h:635)
      n1: 8222240 0x10CE9F: void std::__cxx11::list<AG, std::allocator<AG> >::_M_insert<AG>(std::_List_iterator<AG>, AG&&) (stl_list.h:1912)
       n1: 8222240 0x10C40C: std::__cxx11::list<AG, std::allocator<AG> >::push_back(AG&&) (stl_list.h:1218)
        n0: 8222240 0x10AE64: main (transversal.c++:64)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 5778928 in 8 places, all below massif's threshold (1.00%)
#-----------
snapshot=18
#-----------
time=48262556628
mem_heap_B=532374600
mem_heap_extra_B=100339896
mem_stacks_B=0
heap_tree=detailed
n8: 532374600 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 209295648 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 209295648 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 209295648 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 209295648 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 209295648 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 209295648 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 209295648 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 209295360 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 209295360 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 156971736 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 156971736 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 156971736 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 156971736 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 156971736 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 156971736 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 156971736 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 156971520 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 156971520 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 66379680 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 66379680 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 66379680 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 66379680 0x10AD73: main (transversal.c++:57)
 n1: 49784760 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 49784760 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 49784760 0x10AD73: main (transversal.c++:57)
 n1: 29068840 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 29068840 0x10F51C: allocate (allocator.h:185)
   n1: 29068840 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 29068840 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 29068840 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 29068840 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 29068840 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 29068800 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 29068800 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 11577224 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 11577224 0x10F145: allocate (allocator.h:185)
   n1: 11577224 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 11577224 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 11577224 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 11577224 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 11577224 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 11577224 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 11577224 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 11577224 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 11577224 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 11577224 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 9219360 0x10F8AF: __gnu_cxx::new_allocator<std::_List_node<AG> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 9219360 0x10EF5C: allocate (allocator.h:185)
   n1: 9219360 0x10EF5C: std::allocator_traits<std::allocator<std::_List_node<AG> > >::allocate(std::allocator<std::_List_node<AG> >&, unsigned long) (alloc_traits.h:464)
    n2: 9219360 0x10E40C: std::__cxx11::_List_base<AG, std::allocator<AG> >::_M_get_node() (stl_list.h:443)
     n1: 9219360 0x10D8A1: std::_List_node<AG>* std::__cxx11::list<AG, std::allocator<AG> >::_M_create_node<AG>(AG&&) (stl_list.h:635)
      n1: 9219360 0x10CE9F: void std::__cxx11::list<AG, std::allocator<AG> >::_M_insert<AG>(std::_List_iterator<AG>, AG&&) (stl_list.h:1912)
       n1: 9219360 0x10C40C: std::__cxx11::list<AG, std::allocator<AG> >::push_back(AG&&) (stl_list.h:1218)
        n0: 9219360 0x10AE64: main (transversal.c++:64)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 77352 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=19
#-----------
time=52228009073
mem_heap_B=526013032
mem_heap_extra_B=99542592
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=20
#-----------
time=54678709830
mem_heap_B=564712136
mem_heap_extra_B=106940952
mem_stacks_B=0
heap_tree=detailed
n8: 564712136 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 234914976 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 234914976 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 234914976 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 234914976 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 234914976 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 234914976 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 234914976 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 234914688 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 234914688 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 176186232 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 176186232 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 176186232 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 176186232 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 176186232 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 176186232 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 176186232 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 176186016 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 176186016 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 57880224 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 57880224 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 57880224 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 57880224 0x10AD73: main (transversal.c++:57)
 n1: 43410168 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 43410168 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 43410168 0x10AD73: main (transversal.c++:57)
 n1: 32627080 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 32627080 0x10F51C: allocate (allocator.h:185)
   n1: 32627080 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 32627080 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 32627080 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 32627080 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 32627080 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 32627040 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 32627040 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 11577224 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 11577224 0x10F145: allocate (allocator.h:185)
   n1: 11577224 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 11577224 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 11577224 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 11577224 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 11577224 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 11577224 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 11577224 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 11577224 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 11577224 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 11577224 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 8038880 0x10F8AF: __gnu_cxx::new_allocator<std::_List_node<AG> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 8038880 0x10EF5C: allocate (allocator.h:185)
   n1: 8038880 0x10EF5C: std::allocator_traits<std::allocator<std::_List_node<AG> > >::allocate(std::allocator<std::_List_node<AG> >&, unsigned long) (alloc_traits.h:464)
    n2: 8038880 0x10E40C: std::__cxx11::_List_base<AG, std::allocator<AG> >::_M_get_node() (stl_list.h:443)
     n1: 8038880 0x10D8A1: std::_List_node<AG>* std::__cxx11::list<AG, std::allocator<AG> >::_M_create_node<AG>(AG&&) (stl_list.h:635)
      n1: 8038880 0x10CE9F: void std::__cxx11::list<AG, std::allocator<AG> >::_M_insert<AG>(std::_List_iterator<AG>, AG&&) (stl_list.h:1912)
       n1: 8038880 0x10C40C: std::__cxx11::list<AG, std::allocator<AG> >::push_back(AG&&) (stl_list.h:1218)
        n0: 8038880 0x10AE64: main (transversal.c++:64)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 77352 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=21
#-----------
time=57700391591
mem_heap_B=611436296
mem_heap_extra_B=115873512
mem_stacks_B=0
heap_tree=detailed
n8: 611436296 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 247283136 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 247283136 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 247283136 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 247283136 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 247283136 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 247283136 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 247283136 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 247282848 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 247282848 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 185462352 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 185462352 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 185462352 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 185462352 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 185462352 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 185462352 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 185462352 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 185462136 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 185462136 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 70248384 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 70248384 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 70248384 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 70248384 0x10AD73: main (transversal.c++:57)
 n1: 52686288 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 52686288 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 52686288 0x10AD73: main (transversal.c++:57)
 n1: 34344880 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 34344880 0x10F51C: allocate (allocator.h:185)
   n1: 34344880 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 34344880 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 34344880 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 34344880 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 34344880 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 34344840 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 34344840 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 11577224 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 11577224 0x10F145: allocate (allocator.h:185)
   n1: 11577224 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 11577224 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 11577224 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 11577224 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 11577224 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 11577224 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 11577224 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 11577224 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 11577224 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 11577224 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 9756680 0x10F8AF: __gnu_cxx::new_allocator<std::_List_node<AG> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 9756680 0x10EF5C: allocate (allocator.h:185)
   n1: 9756680 0x10EF5C: std::allocator_traits<std::allocator<std::_List_node<AG> > >::allocate(std::allocator<std::_List_node<AG> >&, unsigned long) (alloc_traits.h:464)
    n2: 9756680 0x10E40C: std::__cxx11::_List_base<AG, std::allocator<AG> >::_M_get_node() (stl_list.h:443)
     n1: 9756680 0x10D8A1: std::_List_node<AG>* std::__cxx11::list<AG, std::allocator<AG> >::_M_create_node<AG>(AG&&) (stl_list.h:635)
      n1: 9756680 0x10CE9F: void std::__cxx11::list<AG, std::allocator<AG> >::_M_insert<AG>(std::_List_iterator<AG>, AG&&) (stl_list.h:1912)
       n1: 9756680 0x10C40C: std::__cxx11::list<AG, std::allocator<AG> >::push_back(AG&&) (stl_list.h:1218)
        n0: 9756680 0x10AE64: main (transversal.c++:64)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 77352 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=22
#-----------
time=61277950582
mem_heap_B=586266544
mem_heap_extra_B=110886168
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=23
#-----------
time=64082441207
mem_heap_B=629772400
mem_heap_extra_B=119721800
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=24
#-----------
time=66170784112
mem_heap_B=661755208
mem_heap_extra_B=125836152
mem_stacks_B=0
heap_tree=detailed
n8: 661755208 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 280280160 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 280280160 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 280280160 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 280280160 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 280280160 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 280280160 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 280280160 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 280279872 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 280279872 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 210210120 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 210210120 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 210210120 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 210210120 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 210210120 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 210210120 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 210210120 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 210209904 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 210209904 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 63890784 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 63890784 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 63890784 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 63890784 0x10AD73: main (transversal.c++:57)
 n1: 47918088 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 47918088 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 47918088 0x10AD73: main (transversal.c++:57)
 n1: 38927800 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 38927800 0x10F51C: allocate (allocator.h:185)
   n1: 38927800 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 38927800 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 38927800 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 38927800 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 38927800 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 38927760 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 38927760 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 11577224 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 11577224 0x10F145: allocate (allocator.h:185)
   n1: 11577224 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 11577224 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 11577224 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 11577224 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 11577224 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 11577224 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 11577224 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 11577224 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 11577224 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 11577224 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 8873680 0x10F8AF: __gnu_cxx::new_allocator<std::_List_node<AG> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 8873680 0x10EF5C: allocate (allocator.h:185)
   n1: 8873680 0x10EF5C: std::allocator_traits<std::allocator<std::_List_node<AG> > >::allocate(std::allocator<std::_List_node<AG> >&, unsigned long) (alloc_traits.h:464)
    n2: 8873680 0x10E40C: std::__cxx11::_List_base<AG, std::allocator<AG> >::_M_get_node() (stl_list.h:443)
     n1: 8873680 0x10D8A1: std::_List_node<AG>* std::__cxx11::list<AG, std::allocator<AG> >::_M_create_node<AG>(AG&&) (stl_list.h:635)
      n1: 8873680 0x10CE9F: void std::__cxx11::list<AG, std::allocator<AG> >::_M_insert<AG>(std::_List_iterator<AG>, AG&&) (stl_list.h:1912)
       n1: 8873680 0x10C40C: std::__cxx11::list<AG, std::allocator<AG> >::push_back(AG&&) (stl_list.h:1218)
        n0: 8873680 0x10AE64: main (transversal.c++:64)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 77352 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=25
#-----------
time=69866427073
mem_heap_B=716557768
mem_heap_extra_B=136313112
mem_stacks_B=0
heap_tree=detailed
n8: 716557768 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 294786720 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 294786720 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 294786720 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 294786720 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 294786720 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 294786720 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 294786720 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 294786432 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 294786432 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 221090040 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 221090040 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 221090040 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 221090040 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 221090040 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 221090040 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 221090040 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 221089824 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 221089824 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 78397344 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 78397344 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 78397344 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 78397344 0x10AD73: main (transversal.c++:57)
 n1: 58798008 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 58798008 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 58798008 0x10AD73: main (transversal.c++:57)
 n1: 40942600 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 40942600 0x10F51C: allocate (allocator.h:185)
   n1: 40942600 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 40942600 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 40942600 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 40942600 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 40942600 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 40942560 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 40942560 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 11577224 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 11577224 0x10F145: allocate (allocator.h:185)
   n1: 11577224 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 11577224 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 11577224 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 11577224 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 11577224 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 11577224 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 11577224 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 11577224 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 11577224 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 11577224 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 10888480 0x10F8AF: __gnu_cxx::new_allocator<std::_List_node<AG> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 10888480 0x10EF5C: allocate (allocator.h:185)
   n1: 10888480 0x10EF5C: std::allocator_traits<std::allocator<std::_List_node<AG> > >::allocate(std::allocator<std::_List_node<AG> >&, unsigned long) (alloc_traits.h:464)
    n2: 10888480 0x10E40C: std::__cxx11::_List_base<AG, std::allocator<AG> >::_M_get_node() (stl_list.h:443)
     n1: 10888480 0x10D8A1: std::_List_node<AG>* std::__cxx11::list<AG, std::allocator<AG> >::_M_create_node<AG>(AG&&) (stl_list.h:635)
      n1: 10888480 0x10CE9F: void std::__cxx11::list<AG, std::allocator<AG> >::_M_insert<AG>(std::_List_iterator<AG>, AG&&) (stl_list.h:1912)
       n1: 10888480 0x10C40C: std::__cxx11::list<AG, std::allocator<AG> >::push_back(AG&&) (stl_list.h:1218)
        n0: 10888480 0x10AE64: main (transversal.c++:64)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 77352 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=26
#-----------
time=73545466396
mem_heap_B=682144840
mem_heap_extra_B=129549832
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=27
#-----------
time=76349880673
mem_heap_B=723992584
mem_heap_extra_B=137921112
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=28
#-----------
time=79154333080
mem_heap_B=765070096
mem_heap_extra_B=145774176
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=29
#-----------
time=81012801802
mem_heap_B=791322408
mem_heap_extra_B=150792992
mem_stacks_B=0
heap_tree=detailed
n8: 791322408 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 336529152 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 336529152 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 336529152 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 336529152 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 336529152 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 336529152 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 336529152 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 336528864 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 336528864 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 252396864 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 252396864 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 252396864 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 252396864 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 252396864 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 252396864 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 252396864 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 252396648 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 252396648 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 76236192 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 76236192 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 76236192 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 76236192 0x10AD73: main (transversal.c++:57)
 n1: 57177144 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 57177144 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 57177144 0x10AD73: main (transversal.c++:57)
 n1: 46740160 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 46740160 0x10F51C: allocate (allocator.h:185)
   n1: 46740160 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 46740160 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 46740160 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 46740160 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 46740160 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 46740120 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 46740120 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 11577224 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 11577224 0x10F145: allocate (allocator.h:185)
   n1: 11577224 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 11577224 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 11577224 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 11577224 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 11577224 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 11577224 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 11577224 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 11577224 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 11577224 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 11577224 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 10588320 0x10F8AF: __gnu_cxx::new_allocator<std::_List_node<AG> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 10588320 0x10EF5C: allocate (allocator.h:185)
   n1: 10588320 0x10EF5C: std::allocator_traits<std::allocator<std::_List_node<AG> > >::allocate(std::allocator<std::_List_node<AG> >&, unsigned long) (alloc_traits.h:464)
    n2: 10588320 0x10E40C: std::__cxx11::_List_base<AG, std::allocator<AG> >::_M_get_node() (stl_list.h:443)
     n1: 10588320 0x10D8A1: std::_List_node<AG>* std::__cxx11::list<AG, std::allocator<AG> >::_M_create_node<AG>(AG&&) (stl_list.h:635)
      n1: 10588320 0x10CE9F: void std::__cxx11::list<AG, std::allocator<AG> >::_M_insert<AG>(std::_List_iterator<AG>, AG&&) (stl_list.h:1912)
       n1: 10588320 0x10C40C: std::__cxx11::list<AG, std::allocator<AG> >::push_back(AG&&) (stl_list.h:1218)
        n0: 10588320 0x10AE64: main (transversal.c++:64)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 77352 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=30
#-----------
time=83824311932
mem_heap_B=831673064
mem_heap_extra_B=158507088
mem_stacks_B=0
heap_tree=detailed
n8: 831673064 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 347210208 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 347210208 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 347210208 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 347210208 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 347210208 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 347210208 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 347210208 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 347209920 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 347209920 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 260407656 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 260407656 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 260407656 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 260407656 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 260407656 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 260407656 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 260407656 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 260407440 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 260407440 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 86917248 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 86917248 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 86917248 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 86917248 0x10AD73: main (transversal.c++:57)
 n1: 65187936 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 65187936 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 65187936 0x10AD73: main (transversal.c++:57)
 n1: 48223640 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 48223640 0x10F51C: allocate (allocator.h:185)
   n1: 48223640 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 48223640 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 48223640 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 48223640 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 48223640 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 48223600 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 48223600 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 12071800 0x10F8AF: __gnu_cxx::new_allocator<std::_List_node<AG> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 12071800 0x10EF5C: allocate (allocator.h:185)
   n1: 12071800 0x10EF5C: std::allocator_traits<std::allocator<std::_List_node<AG> > >::allocate(std::allocator<std::_List_node<AG> >&, unsigned long) (alloc_traits.h:464)
    n2: 12071800 0x10E40C: std::__cxx11::_List_base<AG, std::allocator<AG> >::_M_get_node() (stl_list.h:443)
     n1: 12071800 0x10D8A1: std::_List_node<AG>* std::__cxx11::list<AG, std::allocator<AG> >::_M_create_node<AG>(AG&&) (stl_list.h:635)
      n1: 12071800 0x10CE9F: void std::__cxx11::list<AG, std::allocator<AG> >::_M_insert<AG>(std::_List_iterator<AG>, AG&&) (stl_list.h:1912)
       n1: 12071800 0x10C40C: std::__cxx11::list<AG, std::allocator<AG> >::push_back(AG&&) (stl_list.h:1218)
        n0: 12071800 0x10AE64: main (transversal.c++:64)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 11577224 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 11577224 0x10F145: allocate (allocator.h:185)
   n1: 11577224 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 11577224 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 11577224 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 11577224 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 11577224 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 11577224 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 11577224 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 11577224 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 11577224 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 11577224 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 77352 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=31
#-----------
time=86648369581
mem_heap_B=776885704
mem_heap_extra_B=147830024
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=32
#-----------
time=88751647710
mem_heap_B=807129832
mem_heap_extra_B=154096336
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=33
#-----------
time=90854952479
mem_heap_B=836830224
mem_heap_extra_B=159795184
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=34
#-----------
time=92891971402
mem_heap_B=865176936
mem_heap_extra_B=165214400
mem_stacks_B=0
heap_tree=detailed
n7: 865176936 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 379607904 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 379607904 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 379607904 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 379607904 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 379607904 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 379607904 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 379607904 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 379607616 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 379607616 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 284705928 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 284705928 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 284705928 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 284705928 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 284705928 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 284705928 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 284705928 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 284705712 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 284705712 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 72256896 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 72256896 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 72256896 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 72256896 0x10AD73: main (transversal.c++:57)
 n1: 54192672 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 54192672 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 54192672 0x10AD73: main (transversal.c++:57)
 n1: 52723320 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 52723320 0x10F51C: allocate (allocator.h:185)
   n1: 52723320 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 52723320 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 52723320 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 52723320 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 52723320 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 52723280 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 52723280 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 11577224 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 11577224 0x10F145: allocate (allocator.h:185)
   n1: 11577224 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 11577224 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 11577224 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 11577224 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 11577224 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 11577224 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 11577224 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 11577224 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 11577224 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 11577224 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 10112992 in 8 places, all below massif's threshold (1.00%)
#-----------
snapshot=35
#-----------
time=96142430409
mem_heap_B=909310568
mem_heap_extra_B=173651712
mem_stacks_B=0
heap_tree=detailed
n8: 909310568 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 391290336 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 391290336 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 391290336 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 391290336 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 391290336 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 391290336 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 391290336 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 391290048 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 391290048 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 293467752 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 293467752 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 293467752 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 293467752 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 293467752 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 293467752 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 293467752 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 293467536 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 293467536 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 83939328 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 83939328 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 83939328 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 83939328 0x10AD73: main (transversal.c++:57)
 n1: 62954496 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 62954496 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 62954496 0x10AD73: main (transversal.c++:57)
 n1: 54345880 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 54345880 0x10F51C: allocate (allocator.h:185)
   n1: 54345880 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 54345880 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 54345880 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 54345880 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 54345880 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 54345840 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 54345840 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 11658200 0x10F8AF: __gnu_cxx::new_allocator<std::_List_node<AG> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 11658200 0x10EF5C: allocate (allocator.h:185)
   n1: 11658200 0x10EF5C: std::allocator_traits<std::allocator<std::_List_node<AG> > >::allocate(std::allocator<std::_List_node<AG> >&, unsigned long) (alloc_traits.h:464)
    n2: 11658200 0x10E40C: std::__cxx11::_List_base<AG, std::allocator<AG> >::_M_get_node() (stl_list.h:443)
     n1: 11658200 0x10D8A1: std::_List_node<AG>* std::__cxx11::list<AG, std::allocator<AG> >::_M_create_node<AG>(AG&&) (stl_list.h:635)
      n1: 11658200 0x10CE9F: void std::__cxx11::list<AG, std::allocator<AG> >::_M_insert<AG>(std::_List_iterator<AG>, AG&&) (stl_list.h:1912)
       n1: 11658200 0x10C40C: std::__cxx11::list<AG, std::allocator<AG> >::push_back(AG&&) (stl_list.h:1218)
        n0: 11658200 0x10AE64: main (transversal.c++:64)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 11577224 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 11577224 0x10F145: allocate (allocator.h:185)
   n1: 11577224 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 11577224 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 11577224 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 11577224 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 11577224 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 11577224 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 11577224 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 11577224 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 11577224 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 11577224 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 77352 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=36
#-----------
time=98861842798
mem_heap_B=946228584
mem_heap_extra_B=180709568
mem_stacks_B=0
heap_tree=detailed
n8: 946228584 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 401062752 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 401062752 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 401062752 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 401062752 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 401062752 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 401062752 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 401062752 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 401062464 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 401062464 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 300797064 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 300797064 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 300797064 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 300797064 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 300797064 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 300797064 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 300797064 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 300796848 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 300796848 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 93711744 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 93711744 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 93711744 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 93711744 0x10AD73: main (transversal.c++:57)
 n1: 70283808 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 70283808 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 70283808 0x10AD73: main (transversal.c++:57)
 n1: 55703160 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 55703160 0x10F51C: allocate (allocator.h:185)
   n1: 55703160 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 55703160 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 55703160 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 55703160 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 55703160 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 55703120 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 55703120 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 13015480 0x10F8AF: __gnu_cxx::new_allocator<std::_List_node<AG> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 13015480 0x10EF5C: allocate (allocator.h:185)
   n1: 13015480 0x10EF5C: std::allocator_traits<std::allocator<std::_List_node<AG> > >::allocate(std::allocator<std::_List_node<AG> >&, unsigned long) (alloc_traits.h:464)
    n2: 13015480 0x10E40C: std::__cxx11::_List_base<AG, std::allocator<AG> >::_M_get_node() (stl_list.h:443)
     n1: 13015480 0x10D8A1: std::_List_node<AG>* std::__cxx11::list<AG, std::allocator<AG> >::_M_create_node<AG>(AG&&) (stl_list.h:635)
      n1: 13015480 0x10CE9F: void std::__cxx11::list<AG, std::allocator<AG> >::_M_insert<AG>(std::_List_iterator<AG>, AG&&) (stl_list.h:1912)
       n1: 13015480 0x10C40C: std::__cxx11::list<AG, std::allocator<AG> >::push_back(AG&&) (stl_list.h:1218)
        n0: 13015480 0x10AE64: main (transversal.c++:64)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 11577224 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 11577224 0x10F145: allocate (allocator.h:185)
   n1: 11577224 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 11577224 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 11577224 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 11577224 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 11577224 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 11577224 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 11577224 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 11577224 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 11577224 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 11577224 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 77352 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=37
#-----------
time=100965158014
mem_heap_B=878038768
mem_heap_extra_B=168115944
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=38
#-----------
time=103068461430
mem_heap_B=906316904
mem_heap_extra_B=173615328
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=39
#-----------
time=106921338850
mem_heap_B=966713016
mem_heap_extra_B=182879928
mem_stacks_B=0
heap_tree=detailed
n7: 966713016 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 427460832 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 427460832 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 427460832 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 427460832 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 427460832 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 427460832 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 427460832 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 427460544 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 427460544 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 320595624 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 320595624 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 320595624 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 320595624 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 320595624 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 320595624 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 320595624 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 320595408 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 320595408 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 71841312 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 71841312 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 71841312 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 71841312 0x10AD73: main (transversal.c++:57)
 n1: 59369560 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 59369560 0x10F51C: allocate (allocator.h:185)
   n1: 59369560 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 59369560 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 59369560 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 59369560 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 59369560 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 59369520 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 59369520 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 53880984 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 53880984 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 53880984 0x10AD73: main (transversal.c++:57)
 n1: 23509432 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 23509432 0x10F145: allocate (allocator.h:185)
   n1: 23509432 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 23509432 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 23509432 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 23509432 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 23509432 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 23509432 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 23509432 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 23509432 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 23509432 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 23509432 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 10055272 in 8 places, all below massif's threshold (1.00%)
#-----------
snapshot=40
#-----------
time=109180931766
mem_heap_B=995959544
mem_heap_extra_B=188471176
mem_stacks_B=0
heap_tree=detailed
n7: 995959544 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 435202560 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 435202560 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 435202560 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 435202560 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 435202560 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 435202560 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 435202560 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 435202272 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 435202272 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 326401920 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 326401920 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 326401920 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 326401920 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 326401920 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 326401920 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 326401920 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 326401704 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 326401704 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 79583040 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 79583040 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 79583040 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 79583040 0x10AD73: main (transversal.c++:57)
 n1: 60444800 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 60444800 0x10F51C: allocate (allocator.h:185)
   n1: 60444800 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 60444800 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 60444800 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 60444800 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 60444800 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 60444760 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 60444760 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 59687280 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 59687280 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 59687280 0x10AD73: main (transversal.c++:57)
 n1: 23509432 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 23509432 0x10F145: allocate (allocator.h:185)
   n1: 23509432 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 23509432 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 23509432 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 23509432 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 23509432 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 23509432 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 23509432 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 23509432 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 23509432 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 23509432 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 11130512 in 8 places, all below massif's threshold (1.00%)
#-----------
snapshot=41
#-----------
time=112329629135
mem_heap_B=1036338488
mem_heap_extra_B=196190680
mem_stacks_B=0
heap_tree=detailed
n8: 1036338488 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 445891104 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 445891104 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 445891104 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 445891104 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 445891104 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 445891104 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 445891104 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 445890816 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 445890816 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 334418328 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 334418328 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 334418328 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 334418328 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 334418328 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 334418328 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 334418328 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 334418112 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 334418112 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 90271584 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 90271584 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 90271584 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 90271584 0x10AD73: main (transversal.c++:57)
 n1: 67703688 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 67703688 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 67703688 0x10AD73: main (transversal.c++:57)
 n1: 61929320 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 61929320 0x10F51C: allocate (allocator.h:185)
   n1: 61929320 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 61929320 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 61929320 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 61929320 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 61929320 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 61929280 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 61929280 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 23509432 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 23509432 0x10F145: allocate (allocator.h:185)
   n1: 23509432 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 23509432 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 23509432 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 23509432 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 23509432 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 23509432 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 23509432 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 23509432 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 23509432 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 23509432 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 12537680 0x10F8AF: __gnu_cxx::new_allocator<std::_List_node<AG> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 12537680 0x10EF5C: allocate (allocator.h:185)
   n1: 12537680 0x10EF5C: std::allocator_traits<std::allocator<std::_List_node<AG> > >::allocate(std::allocator<std::_List_node<AG> >&, unsigned long) (alloc_traits.h:464)
    n2: 12537680 0x10E40C: std::__cxx11::_List_base<AG, std::allocator<AG> >::_M_get_node() (stl_list.h:443)
     n1: 12537680 0x10D8A1: std::_List_node<AG>* std::__cxx11::list<AG, std::allocator<AG> >::_M_create_node<AG>(AG&&) (stl_list.h:635)
      n1: 12537680 0x10CE9F: void std::__cxx11::list<AG, std::allocator<AG> >::_M_insert<AG>(std::_List_iterator<AG>, AG&&) (stl_list.h:1912)
       n1: 12537680 0x10C40C: std::__cxx11::list<AG, std::allocator<AG> >::push_back(AG&&) (stl_list.h:1218)
        n0: 12537680 0x10AE64: main (transversal.c++:64)
     n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 77352 in 7 places, all below massif's threshold (1.00%)
#-----------
snapshot=42
#-----------
time=115484600034
mem_heap_B=982069088
mem_heap_extra_B=186526040
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=43
#-----------
time=117587902590
mem_heap_B=1008230048
mem_heap_extra_B=191527400
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=44
#-----------
time=120707565849
mem_heap_B=1046090232
mem_heap_extra_B=198765368
mem_stacks_B=0
heap_tree=detailed
n7: 1046090232 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 472015296 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 472015296 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 472015296 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 472015296 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 472015296 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 472015296 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 472015296 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 472015008 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 472015008 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 354011472 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 354011472 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 354011472 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 354011472 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 354011472 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 354011472 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 354011472 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 354011256 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 354011256 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 69310080 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 69310080 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 69310080 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 69310080 0x10AD73: main (transversal.c++:57)
 n1: 65557680 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 65557680 0x10F51C: allocate (allocator.h:185)
   n1: 65557680 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 65557680 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 65557680 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 65557680 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 65557680 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 65557640 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 65557640 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 51982560 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 51982560 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 51982560 0x10AD73: main (transversal.c++:57)
 n1: 23509432 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 23509432 0x10F145: allocate (allocator.h:185)
   n1: 23509432 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 23509432 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 23509432 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 23509432 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 23509432 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 23509432 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 23509432 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 23509432 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 23509432 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 23509432 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 9703712 in 8 places, all below massif's threshold (1.00%)
#-----------
snapshot=45
#-----------
time=123377640015
mem_heap_B=1077760824
mem_heap_extra_B=204820040
mem_stacks_B=0
heap_tree=detailed
n7: 1077760824 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 480398688 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 480398688 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 480398688 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 480398688 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 480398688 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 480398688 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 480398688 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 480398400 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 480398400 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 360299016 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 360299016 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 360299016 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 360299016 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 360299016 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 360299016 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 360299016 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 360298800 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 360298800 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 77693472 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 77693472 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 77693472 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 77693472 0x10AD73: main (transversal.c++:57)
 n1: 66722040 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 66722040 0x10F51C: allocate (allocator.h:185)
   n1: 66722040 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 66722040 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 66722040 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 66722040 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 66722040 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 66722000 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 66722000 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 58270104 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 58270104 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 58270104 0x10AD73: main (transversal.c++:57)
 n1: 23509432 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 23509432 0x10F145: allocate (allocator.h:185)
   n1: 23509432 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 23509432 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 23509432 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 23509432 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 23509432 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 23509432 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 23509432 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 23509432 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 23509432 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 23509432 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 10868072 in 8 places, all below massif's threshold (1.00%)
#-----------
snapshot=46
#-----------
time=125480922354
mem_heap_B=1016527064
mem_heap_extra_B=193770752
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=47
#-----------
time=127584229499
mem_heap_B=1040494688
mem_heap_extra_B=198387128
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=48
#-----------
time=129687525911
mem_heap_B=1064172760
mem_heap_extra_B=202913808
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=49
#-----------
time=131790834022
mem_heap_B=1087274264
mem_heap_extra_B=207330272
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=50
#-----------
time=131848268302
mem_heap_B=1087947768
mem_heap_extra_B=207459032
mem_stacks_B=0
heap_tree=detailed
n7: 1087947768 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 504702144 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 504702144 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 504702144 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 504702144 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 504702144 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 504702144 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 504702144 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 504701856 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 504701856 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 378526608 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 378526608 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 378526608 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 378526608 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 378526608 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 378526608 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 378526608 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 378526392 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 378526392 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 70097520 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 70097520 0x10F51C: allocate (allocator.h:185)
   n1: 70097520 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 70097520 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 70097520 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 70097520 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 70097520 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 70097480 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 70097480 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 58783104 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 58783104 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 58783104 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 58783104 0x10AD73: main (transversal.c++:57)
 n1: 44087328 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 44087328 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 44087328 0x10AD73: main (transversal.c++:57)
 n1: 23509432 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 23509432 0x10F145: allocate (allocator.h:185)
   n1: 23509432 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 23509432 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 23509432 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 23509432 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 23509432 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 23509432 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 23509432 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 23509432 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 23509432 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 23509432 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 8241632 in 8 places, all below massif's threshold (1.00%)
#-----------
snapshot=51
#-----------
time=132850373834
mem_heap_B=1098823416
mem_heap_extra_B=209538200
mem_stacks_B=0
heap_tree=detailed
n7: 1098823416 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 507580992 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 507580992 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 507580992 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 507580992 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 507580992 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 507580992 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 507580992 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 507580704 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 507580704 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 380685744 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 380685744 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 380685744 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 380685744 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 380685744 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 380685744 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 380685744 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 380685528 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 380685528 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 70497360 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 70497360 0x10F51C: allocate (allocator.h:185)
   n1: 70497360 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 70497360 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 70497360 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 70497360 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 70497360 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 70497320 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 70497320 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 61661952 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 61661952 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 61661952 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 61661952 0x10AD73: main (transversal.c++:57)
 n1: 46246464 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 46246464 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 46246464 0x10AD73: main (transversal.c++:57)
 n1: 23509432 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 23509432 0x10F145: allocate (allocator.h:185)
   n1: 23509432 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 23509432 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 23509432 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 23509432 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 23509432 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 23509432 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 23509432 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 23509432 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 23509432 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 23509432 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 8641472 in 8 places, all below massif's threshold (1.00%)
#-----------
snapshot=52
#-----------
time=133872380498
mem_heap_B=1109807864
mem_heap_extra_B=211638168
mem_stacks_B=0
heap_tree=peak
n7: 1109807864 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 510488640 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 510488640 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 510488640 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 510488640 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 510488640 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 510488640 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 510488640 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 510488352 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 510488352 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 382866480 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 382866480 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 382866480 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 382866480 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 382866480 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 382866480 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 382866480 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 382866264 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 382866264 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 70901200 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 70901200 0x10F51C: allocate (allocator.h:185)
   n1: 70901200 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 70901200 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 70901200 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 70901200 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 70901200 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 70901160 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 70901160 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 64569600 0x11369A: std::vector<unsigned int, std::allocator<unsigned int> >::_M_default_append(unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 64569600 0x1121E2: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n1: 64569600 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
    n0: 64569600 0x10AD73: main (transversal.c++:57)
 n1: 48427200 0x1120FF: AG::AG(unsigned long, unsigned long) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n1: 48427200 0x11228A: operator*(matrix const&, AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
   n0: 48427200 0x10AD73: main (transversal.c++:57)
 n1: 23509432 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 23509432 0x10F145: allocate (allocator.h:185)
   n1: 23509432 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 23509432 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 23509432 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 23509432 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 23509432 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 23509432 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 23509432 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 23509432 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 23509432 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 23509432 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 9045312 in 8 places, all below massif's threshold (1.00%)
#-----------
snapshot=53
#-----------
time=135569448542
mem_heap_B=1055540568
mem_heap_extra_B=201770528
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=54
#-----------
time=137266506287
mem_heap_B=1072772312
mem_heap_extra_B=205089248
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=55
#-----------
time=138963568036
mem_heap_B=1089674464
mem_heap_extra_B=208320552
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=56
#-----------
time=140660631774
mem_heap_B=1105904088
mem_heap_extra_B=211423264
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=57
#-----------
time=142357706608
mem_heap_B=1066422272
mem_heap_extra_B=203683392
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=58
#-----------
time=144054782857
mem_heap_B=1081383288
mem_heap_extra_B=206688184
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=59
#-----------
time=145751865193
mem_heap_B=1095534904
mem_heap_extra_B=209421592
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=60
#-----------
time=147448920665
mem_heap_B=1071611352
mem_heap_extra_B=204608384
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=61
#-----------
time=149146003690
mem_heap_B=1083484760
mem_heap_extra_B=207082400
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=62
#-----------
time=150843061508
mem_heap_B=1062060952
mem_heap_extra_B=202731216
mem_stacks_B=0
heap_tree=detailed
n5: 1062060952 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n2: 547828128 0x1130D0: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 547828128 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 547828128 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 547828128 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 547828128 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 547828128 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 547828128 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 547827840 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 547827840 0x10AE40: main (transversal.c++:63)
        n0: 288 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n2: 410871096 0x113081: AG::AG(AG const&) (in /home/thomas/programs/orthogoval/affine/even_order/bin/transversal)
  n2: 410871096 0x10F335: decltype (::new ((void*)(0)) AG((declval<AG const&>)())) std::construct_at<AG, AG const&>(AG*, AG const&) (stl_construct.h:97)
   n1: 410871096 0x10F567: void std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::construct<AG, AG const&>(std::allocator<std::__detail::_Hash_node<AG, true> >&, AG*, AG const&) (alloc_traits.h:518)
    n1: 410871096 0x10ED02: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1878)
     n1: 410871096 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 410871096 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 410871096 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 410870880 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 410870880 0x10AE40: main (transversal.c++:63)
        n0: 216 in 1 place, below massif's threshold (1.00%)
   n0: 0 in 1 place, below massif's threshold (1.00%)
  n0: 0 in 2 places, all below massif's threshold (1.00%)
 n1: 76087240 0x10FA71: __gnu_cxx::new_allocator<std::__detail::_Hash_node<AG, true> >::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 76087240 0x10F51C: allocate (allocator.h:185)
   n1: 76087240 0x10F51C: std::allocator_traits<std::allocator<std::__detail::_Hash_node<AG, true> > >::allocate(std::allocator<std::__detail::_Hash_node<AG, true> >&, unsigned long) (alloc_traits.h:464)
    n1: 76087240 0x10EC99: std::__detail::_Hash_node<AG, true>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_node<AG const&>(AG const&) (hashtable_policy.h:1873)
     n1: 76087240 0x10E210: std::__detail::_Hash_node<AG, true>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > >::operator()<AG const&>(AG const&) const (hashtable_policy.h:168)
      n1: 76087240 0x10D7A2: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2108)
       n2: 76087240 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
        n1: 76087200 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
         n0: 76087200 0x10AE40: main (transversal.c++:63)
        n0: 40 in 1 place, below massif's threshold (1.00%)
 n1: 23509432 0x10F98D: __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) (new_allocator.h:127)
  n1: 23509432 0x10F145: allocate (allocator.h:185)
   n1: 23509432 0x10F145: std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) (alloc_traits.h:464)
    n1: 23509432 0x10F19E: std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<AG, true> > >::_M_allocate_buckets(unsigned long) (hashtable_policy.h:1927)
     n1: 23509432 0x10E8A2: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_allocate_buckets(unsigned long) (hashtable.h:440)
      n1: 23509432 0x10F592: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) (hashtable.h:2382)
       n1: 23509432 0x10ED89: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_rehash(unsigned long, unsigned long const&) (hashtable.h:2361)
        n1: 23509432 0x10E319: std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<AG, true>*, unsigned long) (hashtable.h:2021)
         n1: 23509432 0x10D7DC: std::pair<std::__detail::_Node_iterator<AG, true, true>, bool> std::_Hashtable<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::_M_insert<AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > >(AG const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<AG, true> > > const&, std::integral_constant<bool, true>) (hashtable.h:2110)
          n2: 23509432 0x10CE52: std::__detail::_Insert_base<AG, AG, std::allocator<AG>, std::__detail::_Identity, std::equal_to<AG>, AG::hash_func, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, true, true> >::insert(AG const&) (hashtable_policy.h:844)
           n1: 23509432 0x10C3B2: std::unordered_set<AG, AG::hash_func, std::equal_to<AG>, std::allocator<AG> >::insert(AG const&) (unordered_set.h:422)
            n0: 23509432 0x10AE40: main (transversal.c++:63)
           n0: 0 in 1 place, below massif's threshold (1.00%)
 n0: 3765056 in 10 places, all below massif's threshold (1.00%)
#-----------
snapshot=63
#-----------
time=152540116872
mem_heap_B=853001864
mem_heap_extra_B=161148472
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=64
#-----------
time=154237172390
mem_heap_B=514337856
mem_heap_extra_B=95494656
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=65
#-----------
time=155934227830
mem_heap_B=175673856
mem_heap_extra_B=29649872
mem_stacks_B=0
heap_tree=empty
